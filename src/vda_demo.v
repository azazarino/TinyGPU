/* Generated by Yosys 0.50+56 (git sha1 8bb24badf, clang++ 18.1.8 -fPIC -O3) */

module tt_um_vga_example(
  input  wire [7:0] ui_in,    // Dedicated inputs
  output wire [7:0] uo_out,   // Dedicated outputs
  input  wire [7:0] uio_in,   // IOs: Input path
  output wire [7:0] uio_out,  // IOs: Output path
  output wire [7:0] uio_oe,   // IOs: Enable path (active high: 0=input, 1=output)
  input  wire       ena,      // always 1 when the design is powered, so you can ignore it
  input  wire       clk,      // clock
  input  wire       rst_n     // reset_n - low to reset
);
  wire [8:0] _00_;
  wire _01_;
  wire _02_;
  wire [1:0] _03_;
  wire [1:0] _04_;
  wire [9:0] _05_;
  wire [9:0] _06_;
  wire [10:0] _07_;
  wire [10:0] _08_;
  wire [9:0] _09_;
  wire [9:0] _10_;
  wire _11_;
  wire [10:0] _12_;
  wire [10:0] _13_;
  wire [1:0] _14_;
  wire [1:0] _15_;
  wire [9:0] _16_;
  wire [9:0] _17_;
  wire [10:0] _18_;
  wire [10:0] _19_;
  wire [1:0] _20_;
  wire [1:0] _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire [9:0] _26_;
  wire [9:0] _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire [1:0] _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire [1:0] _47_;
  reg [8:0] _48_;
  reg [9:0] _49_ = 10'h0e6;
  reg [9:0] _50_ = 10'h0fa;
  reg [10:0] _51_ = 11'h136;
  reg [10:0] _52_ = 11'h14a;
  reg [1:0] _53_ = 2'h1;
  reg [1:0] _54_ = 2'h1;
  wire _55_;
  wire _56_;
  wire [1:0] _57_;
  wire [1:0] _58_;
  wire [1:0] b;
  wire [9:0] bottom;
  input clk;
  wire clk;
  wire [8:0] counter;
  input ena;
  wire ena;
  wire [1:0] g;
  wire hsync;
  wire [10:0] left;
  wire [9:0] pix_x;
  wire [9:0] pix_y;
  wire [1:0] r;
  wire [10:0] right;
  input rst_n;
  wire rst_n;
  wire [9:0] top;
  input [7:0] ui_in;
  wire [7:0] ui_in;
  input [7:0] uio_in;
  wire [7:0] uio_in;
  output [7:0] uio_oe;
  wire [7:0] uio_oe;
  output [7:0] uio_out;
  wire [7:0] uio_out;
  output [7:0] uo_out;
  wire [7:0] uo_out;
  wire video_active;
  wire vsync;
  wire [1:0] x_dir;
  wire [1:0] y_dir;
  assign _32_ = pix_x > 10'h26c;
  assign _34_ = _31_ | _32_;
  assign _35_ = _30_ | _34_;
  assign _36_ = _35_ & video_active;
  assign _37_ = _36_ ? { pix_x[0], pix_y[6] } : 2'h0;
  assign _38_ = { 1'h0, pix_x } > left;
  assign _39_ = { 1'h0, pix_x } < right;
  assign _40_ = _39_ & _38_;
  assign _41_ = pix_y > top;
  assign _42_ = _41_ & _40_;
  assign _43_ = pix_y < bottom;
  assign _45_ = _43_ & _42_;
  assign _46_ = _45_ & video_active;
  assign _47_ = _46_ ? { pix_x[0], pix_y[4] } : 2'h0;
  always @(posedge clk)
    _48_ <= _00_;
  always @(posedge clk)
    _49_ <= _16_;
  always @(posedge clk)
    _50_ <= _17_;
  always @(posedge clk)
    _51_ <= _18_;
  always @(posedge clk)
    _52_ <= _19_;
  always @(posedge clk)
    _53_ <= _20_;
  always @(posedge clk)
    _54_ <= _21_;
  assign _00_ = counter + 9'h001;
  assign _11_ = ~ rst_n;
  assign _22_ = pix_y == 10'h1e0;
  assign _33_ = counter == 9'h000;
  assign _44_ = _33_ & _22_;
  assign _55_ = $signed(right) >= $signed(11'h26c);
  assign _56_ = $signed(left) <= $signed(11'h014);
  assign _57_ = _56_ ? 2'h1 : x_dir;
  assign _58_ = _55_ ? 2'h3 : _57_;
  assign _01_ = $signed(bottom) >= $signed(10'h1cc);
  assign _02_ = $signed(top) <= $signed(10'h014);
  assign _03_ = _02_ ? 2'h1 : y_dir;
  assign _04_ = _01_ ? 2'h3 : _03_;
  assign _05_ = top + { y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir };
  assign _06_ = bottom + { y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir[1], y_dir };
  assign _07_ = left + { x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir };
  assign _08_ = right + { x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir[1], x_dir };
  assign _09_ = _44_ ? _05_ : top;
  assign _10_ = _44_ ? _06_ : bottom;
  assign _12_ = _44_ ? _07_ : left;
  assign _13_ = _44_ ? _08_ : right;
  assign _14_ = _44_ ? _58_ : x_dir;
  assign _15_ = _44_ ? _04_ : y_dir;
  assign _16_ = _11_ ? 10'h0e6 : _09_;
  assign _17_ = _11_ ? 10'h0fa : _10_;
  assign _18_ = _11_ ? 11'h136 : _12_;
  assign _19_ = _11_ ? 11'h14a : _13_;
  assign _20_ = _11_ ? x_dir : _14_;
  assign _21_ = _11_ ? y_dir : _15_;
  assign _28_ = pix_y < 10'h014;
  assign _29_ = pix_y > 10'h1cc;
  assign _30_ = _28_ | _29_;
  assign _31_ = pix_x < 10'h014;
  vga_sync_gen vga_sync_gen_inst (
    .clk(clk),
    .display_on(_25_),
    .hpos(_26_),
    .hsync(_23_),
    .reset(rst_n),
    .vpos(_27_),
    .vsync(_24_)
  );
  assign hsync = _23_;
  assign vsync = _24_;
  assign r = _37_;
  assign g = 2'h0;
  assign b = _47_;
  assign video_active = _25_;
  assign pix_x = _26_;
  assign pix_y = _27_;
  assign counter = _48_;
  assign top = _49_;
  assign bottom = _50_;
  assign left = _51_;
  assign right = _52_;
  assign x_dir = _53_;
  assign y_dir = _54_;
  assign uo_out = { hsync, b[0], g[0], r[0], vsync, b[1], g[1], r[1] };
  assign uio_out = 8'h00;
  assign uio_oe = 8'h00;
endmodule

module vga_sync_gen(clk, reset, hsync, vsync, display_on, hpos, vpos);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire [9:0] _12_;
  wire [9:0] _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire [9:0] _18_;
  wire [9:0] _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  reg [9:0] _24_ = 10'h000;
  wire [9:0] _25_;
  reg [9:0] _26_ = 10'h000;
  reg _27_;
  reg _28_;
  input clk;
  wire clk;
  output display_on;
  wire display_on;
  wire hmaxxed;
  output [9:0] hpos;
  wire [9:0] hpos;
  wire [9:0] hpos_cnt;
  output hsync;
  wire hsync;
  input reset;
  wire reset;
  wire vmaxxed;
  output [9:0] vpos;
  wire [9:0] vpos;
  wire [9:0] vpos_cnt;
  output vsync;
  wire vsync;
  assign _00_ = hpos_cnt == 10'h31f;
  assign _01_ = ~ reset;
  assign _02_ = _00_ | _01_;
  assign _03_ = _02_ ? 1'h1 : 1'h0;
  assign _04_ = vpos_cnt == 10'h20c;
  assign _05_ = ~ reset;
  assign _06_ = _04_ | _05_;
  assign _07_ = _06_ ? 1'h1 : 1'h0;
  assign _08_ = hpos_cnt >= 10'h290;
  assign _09_ = hpos_cnt <= 10'h2ef;
  assign _10_ = _09_ & _08_;
  assign _11_ = _10_ ? 1'h1 : 1'h0;
  assign _12_ = hpos_cnt + 10'h001;
  assign _13_ = hmaxxed ? 10'h000 : _12_;
  assign _14_ = vpos_cnt >= 10'h1ea;
  assign _15_ = vpos_cnt <= 10'h1eb;
  assign _16_ = _15_ & _14_;
  assign _17_ = _16_ ? 1'h1 : 1'h0;
  assign _18_ = vpos_cnt + 10'h001;
  assign _19_ = vmaxxed ? 10'h000 : _18_;
  assign _20_ = hpos_cnt < 10'h280;
  assign _21_ = vpos_cnt < 10'h1e0;
  assign _22_ = _21_ & _20_;
  assign _23_ = _22_ ? 1'h1 : 1'h0;
  always @(posedge clk)
    _24_ <= _13_;
  assign _25_ = hmaxxed ? _19_ : vpos_cnt;
  always @(posedge clk)
    _26_ <= _25_;
  always @(posedge clk)
    _27_ <= _11_;
  always @(posedge clk)
    _28_ <= _17_;
  assign hmaxxed = _03_;
  assign vmaxxed = _07_;
  assign hpos_cnt = _24_;
  assign vpos_cnt = _26_;
  assign hsync = _27_;
  assign vsync = _28_;
  assign display_on = _23_;
  assign hpos = hpos_cnt;
  assign vpos = vpos_cnt;
endmodule
